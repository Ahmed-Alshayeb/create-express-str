my-app/
â”œâ”€â”€ config/  
â”‚   â””â”€â”€ models/  
â”‚         â””â”€â”€ test.model.js

â”‚   â””â”€â”€ db.connection.js
â”œâ”€â”€ node_modules/ 
â”œâ”€â”€ src/ 

â”‚   â””â”€â”€ middlewares/ 
â”‚         â””â”€â”€ auth.middleware.js 
â”‚   â””â”€â”€ modules/ 
â”‚         â””â”€â”€ test/ 
â”‚              â””â”€â”€ test.controller.js
â”‚              â””â”€â”€ test.routes.js
â”‚              â””â”€â”€ test.validation.js
â”‚   â””â”€â”€ services/ 
â”‚         â””â”€â”€ test.service.js
â”‚   â””â”€â”€ utils/ 
â”‚         â””â”€â”€ test.js
â”‚   â””â”€â”€ index.routes.js
â”‚   â””â”€â”€ initApp.js

â”œâ”€â”€ .env
â”œâ”€â”€ .gitignore 
â”œâ”€â”€ index.js 
â”œâ”€â”€ package.json
â”œâ”€â”€ package-lock.json



=> write this in index.js
import express from "express";
import { initApp } from "./src/initApp.js";

const app = express();

app.set("case sensitive routing", true);
initApp(app, express);



=> write this in initApp.js
import { config } from "dotenv";
import * as Router from "./index.routes.js";

export const initApp = (app, express) => {
  config();
  const port = +process.env.PORT || 4000;

  // Middleware
  app.use(express.json());

  // DB Connection
  // call connection function...

  // Routes
  app.use("/api/v1/test", Router.testRouter);

  // Not Found Route
  app.use("*", (req, res) => {
    res.status(404).json({ msg: `Route ${req.originalUrl} Not Found` });
  });

  // Globel Error Handling
  app.use((err, req, res, next) => {
    res.status(err.statusCode).json({
      status: err.status,
      error: err,
      message: err.message,
      stack: err.stack,
    });
  });

  // Start Server
  app.listen(port, () => {
    console.log(`Server running on port ${port} ðŸš€!...`);
  });
};



=> write this in index.routes.js
import testRouter from "./modules/test/test.routes.js";

export {
  testRouter,
};



=> write this in .gitignore 
.env
node_modules


=> edit in package.json
  "main": "index.js",
  "type": "module",
  "scripts": {
    "start": "nodemon index.js"
  },

=> install packages express, nodemon, dotenv

